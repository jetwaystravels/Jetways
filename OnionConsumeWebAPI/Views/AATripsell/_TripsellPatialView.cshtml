@using System.Globalization;
@model DomainLayer.ViewModel.ViewModel
@{
    string formatTime = string.Empty;
    var ArrivalTime = Model.passeengerlist.journeys[0].designator.arrival;
    var DepartureTime = Model.passeengerlist.journeys[0].designator.departure;
    var DiffTime = (ArrivalTime - DepartureTime);
    TimeSpan time = TimeSpan.Parse(DiffTime.ToString());
    if ((int)time.Minutes == 0)
    {
        formatTime = $"{(int)time.TotalHours}h";

    }
    else
    {
        formatTime = $"{(int)time.TotalHours}h {(int)time.Minutes}m";
    }

}
<style>
    .airliname {
        border-radius: 20px;
        margin-left: 8px;
        padding: 7px 12px;
        font-size: 13px;
        border: 1px solid #2f647e;
    }
</style>
<div class="flight-box-content rounded-4">
    <div class="py-10 px-30">
        <div class="row d-flex justify-content-end">
            <div class="col-auto">
                <div class="text-14 text-light-1 fw-600">Total Time:@formatTime </div>
            </div>
        </div>
    </div>

    @{
        foreach (var item in Model.passeengerlist.journeys)
        {
            for (int i = 0; i < item.segments.Count; i++)
            {
                if (i == 1)
                {
                    formatTime = string.Empty;
                    ArrivalTime = item.segments[i - 1].designator.arrival;
                    DepartureTime = item.segments[i].designator.departure;
                    DiffTime = (ArrivalTime - DepartureTime);
                    time = TimeSpan.Parse(DiffTime.ToString());
                    if ((int)time.Minutes == 0)
                    {
                        formatTime = $"{(int)time.TotalHours}h";

                    }
                    else
                    {
                        formatTime = $"{(int)time.TotalHours}h {(int)time.Minutes}m";
                    }
                    <div class="py-15 px-20 rounded-4 text-15 bg-green-1 flex-center">
                        Change planes at <span class="fw-600"> <div> </div> (@item.segments[i].designator.origin),</span> Connecting Time: <span class="fw-600">@formatTime</span>
                    </div>

                }

                <div class="py-30 px-30 border-top-light">
                    <div class="row y-gap-10 justify-between">
                        <div class="col-auto">

                            @for (int j = 0; j < item.segments[i].legs.Count; j++)
                            {
                                if (j == 1)
                                {
                                    formatTime = string.Empty;
                                    ArrivalTime = item.segments[i].legs[j - 1].designator.arrival;
                                    DepartureTime = item.segments[i].legs[j].designator.departure;
                                    DiffTime = (ArrivalTime - DepartureTime);
                                    time = TimeSpan.Parse(DiffTime.ToString());
                                    if ((int)time.Minutes == 0)
                                    {
                                        formatTime = $"{(int)time.TotalHours}h";

                                    }
                                    else
                                    {
                                        formatTime = $"{(int)time.TotalHours}h {(int)time.Minutes}m";
                                    }
                                    <div class="py-15 px-20 rounded-4 text-15 bg-green-1 flex-center">
                                        Change planes at <span class="fw-600"> <div></div> (@item.segments[i].legs[j].designator.origin),</span> Connecting Time: <span class="fw-600">@formatTime</span>
                                    </div>

                                }
                                <div class="d-flex items-center mb-15">
                                    <div class="w-28 d-flex justify-center mr-15">
                                        <img class="size-30" src="~/img/flight-logo-icon/AIX_X_Logo_Orange.png" alt="image">
                                    </div>
                                    <div class="text-14 text-light-1">Air India Expr... @item.segments[i].identifier.carrierCode @item.segments[i].identifier.identifier</div><span class="airliname">@Model.Seatmaplist.datalist[i].seatMap.name</span>
                                </div>

                                <div class="relative z-0">
                                    <div class="border-line-2"></div>

                                    <div class="d-flex items-center">
                                        <div class="w-28 d-flex justify-center mr-15">
                                            <div class="size-10 border-light rounded-full bg-white"></div>
                                        </div>


                                        <div class="row">
                                            @{
                                                var DepartTime = @item.segments[i].legs[j].designator.departure;
                                                string DepartureTimeStr = DepartTime.ToString();
                                                var DeparTuretimeFinal = DepartureTimeStr.Substring(11, 5);
                                                string QueryOrigin = item.segments[i].legs[j].designator.origin;
                                                string QueryDestination = item.segments[i].legs[j].designator.destination;
                                                if (Citydata.GetAllcity().Where(x => x.cityCode == QueryOrigin).SingleOrDefault() != null)
                                                {
                                                    string origin = Citydata.GetAllcity().Where(x => x.cityCode == QueryOrigin).SingleOrDefault().cityName;
                                                    item.segments[i].legs[j].designator.origin = origin;
                                                }

                                                if (Citydata.GetAllcity().Where(x => x.cityCode == QueryDestination).SingleOrDefault() != null)
                                                {
                                                    string destination1 = Citydata.GetAllcity().Where(x => x.cityCode == QueryDestination).SingleOrDefault().cityName;
                                                    item.segments[i].legs[j].designator.destination = destination1;
                                                }

                                                //formatted date
                                                var date = DateTime.ParseExact(DepartureTimeStr, "dd-MM-yyyy HH:mm:ss", CultureInfo.InvariantCulture);
                                                string FormatTeddepartureDate = date.ToString("ddd, dd MMM yyyy");

                                            }

                                            <div class="col-auto">
                                                <div class="lh-14 fw-500">@DeparTuretimeFinal</div>
                                            </div>
                                            <div class="col-auto">
                                                @{
                                                    var allCityData = Citynamelist.GetAllCityData();
                                                    string QueryOriginAirportName = item.segments[i].legs[j].designator.origin;
                                                    string QueryDestinationAirportName = item.segments[i].legs[j].designator.destination;

                                                    var originCity = allCityData.SingleOrDefault(x => x.cityname == QueryOriginAirportName);
                                                    var destinationCity = allCityData.SingleOrDefault(x => x.cityname == QueryDestinationAirportName);

                                                    if (originCity != null)
                                                    {
                                                        item.segments[i].legs[j].designator.origin = originCity.airportname;
                                                    }
                                                    if (destinationCity != null)
                                                    {
                                                        item.segments[i].legs[j].designator.destination = destinationCity.airportname;
                                                    }
                                                }

                                                <div class="lh-14 fw-500">
                                                    @QueryOriginAirportName
                                                    <span class="text-13 ml-2 fw-600">
                                                        (@FormatTeddepartureDate
                                                        <span class="text-13 text-light-1 ml-2">@originCity?.airportname, T-@item.segments[i].legs[j].legInfo.departureTerminal </span> )
                                                    </span>
                                                </div>

                                            </div>
                                        </div>
                                    </div>

                                    <div class="d-flex items-center mt-15">
                                        <div class="w-28 d-flex justify-center mr-15">
                                            <img src="~/img/plane.svg" alt="image">
                                        </div>

                                        <div class="text-14 text-light-1"></div>
                                    </div>

                                    <div class="d-flex items-center mt-15">
                                        <div class="w-28 d-flex justify-center mr-15">
                                            <div class="size-10 border-light rounded-full bg-border"></div>
                                        </div>

                                        <div class="row">
                                            <div class="col-auto">
                                                @{
                                                    var ArriTime = @item.segments[i].legs[j].designator.arrival;
                                                    string ArrivalTimeStr = ArriTime.ToString();
                                                    var ArrivalFinal = ArrivalTimeStr.Substring(11, 5);
                                                    date = DateTime.ParseExact(ArrivalTimeStr, "dd-MM-yyyy HH:mm:ss", CultureInfo.InvariantCulture);
                                                    string formattedarrivalDate = date.ToString("ddd, dd MMM yyyy");

                                                }

                                                <div class="lh-14 fw-500">@ArrivalFinal</div>
                                            </div>
                                            <div class="col-auto">
                                                @*Connected Terminal*@


                                                <div class="lh-14 fw-500">
                                                    @QueryDestinationAirportName
                                                    <span class="text-13 ml-2 fw-600">
                                                        (@formattedarrivalDate
                                                        <span class="text-13 text-light-1 ml-2">@destinationCity?.airportname, T-@item.segments[i].legs[j].legInfo.arrivalTerminal </span> )
                                                    </span>
                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                        <div class="col-auto text-right md:text-left">
                            <div class="text-13">Paid Meal</div>
                            <div class="text-13 mt-1">Economy</div>
                            <div class="text-13 mt-1">15 kgs</div>
                            <div class="text-13 mt-1"><a href="#">View Fare Rules</a></div>
                        </div>
                    </div>
                </div>
            }
        }

    }


</div>