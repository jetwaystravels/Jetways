@model DomainLayer.ViewModel.ViewModel
@using System.Collections;
@{
    Layout = null;
    var data01 = Model;

}
<link rel="stylesheet" href="~/css/vendors.css">
<link rel="stylesheet" href="~/css/main.css" />
<link rel="stylesheet" href="~/css/style.css">
<script src="~/js/custom.js/SGCustom.js"></script>
<script src="~/js/custom.js/customnew.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.4/jquery.min.js"></script>
<style>
    .MWidth {
        width: 1024px;
        margin-left: -50%;
    }
</style>

<div class="journey-box">
    <ul class="nav nav-pills mb-3">
        @{

            <input type="hidden" value="@Model.passeengerlist.passengerscount" id="passengercountid">
            var seatmaap2 = @Model.passeengerlist.journeys[0].segments.Count;
            if (seatmaap2 == 1)
            {
                <li class="nav-item">
                    <button class="nav-link active">@Model.passeengerlist.journeys[0].segments[0].designator.origin-@Model.passeengerlist.journeys[0].segments[0].designator.destination</button>

                </li>
            }
            else
            {
                @for (int i = 0; i < seatmaap2; i++)
                {
                    <li class="nav-item d-flex">
                        @if (i == 0)
                        {
                            <div id="seattab1" class="nav-link active">@Model.passeengerlist.journeys[0].segments[i].designator.origin-@Model.passeengerlist.journeys[0].segments[i].designator.destination</div>

                        }
                        else
                        {
                            <div id="seattab2" class="nav-link">@Model.passeengerlist.journeys[0].segments[i].designator.origin-@Model.passeengerlist.journeys[0].segments[i].designator.destination</div>
                        }
                    </li>


                }
            }
        }


    </ul>
</div>
<div class="row">

    <div class="col-lg-12" id="passtab1">
        <section class="container d-flex flex-wrap">
            @{
                int passengerdata = Model.passkeytype.Count;
            }

            @{
                for (int pas = 0; pas < passengerdata; pas++)
                {
                    if (Model.passkeytype[pas].passengertypecode == "INFT")
                    {
                        continue;
                    }
                    <div class="">
                        <div class="servc-content popinput1">
                            <div>
                                <label>@Model.passkeytype[pas].first</label>
                                <input type="text" id="input_@pas" class="textInput_@pas" value="">
                            </div>
                            <div class="d-flex justify-between">
                                <div>Price</div>
                                <div id="feeSpan_@pas"></div>
                            </div>

                        </div>

                    </div>
                }
            }
        </section>
    </div>
    <div class="col-lg-12" id="passtab2">
        <section class="container d-flex flex-wrap">
            @{
                // int passengerdata1 = @Model.passeengerlist.passengerscount;
                int passengerdata1 = Model.passkeytype.Count;
            }

            @{
                for (int pas = 0; pas < passengerdata1; pas++)
                {
                    if (Model.passkeytype[pas].passengertypecode == "INFT")
                    {
                        continue;
                    }
                    <div class="">
                        <div class="servc-content popinput2">
                            <div>
                                <label>@Model.passkeytype[pas].first</label>
                                <input type="text" id="inputConnect_@pas" class="textInput_@pas" value="">
                            </div>
                            <div class="d-flex justify-between">
                                <div>Price</div>
                                <span id="feeSpanConnect_@pas"></span>
                            </div>

                        </div>

                    </div>
                }
            }
        </section>
    </div>
</div>
<div class="row">
    <div class="col-lg-12">

@{
    var seatmaap = Model.passeengerlist.journeys[0].segments.Count;

    Hashtable ht0 = new Hashtable();
    Hashtable ht1 = new Hashtable();
    for (int k = 0; k < Model.Seatmaplist.datalist.Count; k++)
    {
        int count = Model.Seatmaplist.datalist[k].seatMap.decks.units.Count;
        for (int j = 0; j < count; j++)
        {
            if (Model.Seatmaplist.datalist[k].seatMap.decks.units[j].assignable == true)
            {
                if (!ht0.Contains(Model.Seatmaplist.datalist[k].seatMap.decks.units[j].designator))
                {
                    // ht0.Add(Model.Seatmaplist.datalist[k].seatMap.decks.units[j].designator, Model.Seatmaplist.datalist[k].seatMap.decks.units[j].servicechargefeeAmount);
                    ht0.Add(Model.Seatmaplist.datalist[k].seatMap.decks.units[j].designator, Model.Seatmaplist.datalist[k].seatMap.decks.units[j].servicechargefeeAmount + "_@" + Model.Seatmaplist.datalist[k].seatMap.decks.units[j].unitKey + "_@" + Model.Seatmaplist.datalist[k].seatMap.decks.units[j].Airline);
                }
            }

            if (k == 0)
            {
                if (Model.Seatmaplist.datalist[k].seatMap.decks.units[j].assignable == true)
                {
                    if (!ht0.Contains(Model.Seatmaplist.datalist[k].seatMap.decks.units[j].designator))
                    {
                        // ht0.Add(Model.Seatmaplist.datalist[k].seatMap.decks.units[j].designator, Model.Seatmaplist.datalist[k].seatMap.decks.units[j].servicechargefeeAmount);
                        ht0.Add(Model.Seatmaplist.datalist[k].seatMap.decks.units[j].designator, Model.Seatmaplist.datalist[k].seatMap.decks.units[j].servicechargefeeAmount + "_@" + Model.Seatmaplist.datalist[k].seatMap.decks.units[j].unitKey + "_@" + Model.Seatmaplist.datalist[k].seatMap.decks.units[j].Airline);
                    }
                }

            }
            else
            {
                if (Model.Seatmaplist.datalist[k].seatMap.decks.units[j].assignable == true)
                {
                    if (!ht1.Contains(Model.Seatmaplist.datalist[k].seatMap.decks.units[j].designator))
                    {
                        // ht1.Add(Model.Seatmaplist.datalist[k].seatMap.decks.units[j].designator, Model.Seatmaplist.datalist[k].seatMap.decks.units[j].servicechargefeeAmount);
                        ht1.Add(Model.Seatmaplist.datalist[k].seatMap.decks.units[j].designator, Model.Seatmaplist.datalist[k].seatMap.decks.units[j].servicechargefeeAmount + "_@" + Model.Seatmaplist.datalist[k].seatMap.decks.units[j].unitKey + "_@" + Model.Seatmaplist.datalist[k].seatMap.decks.units[j].Airline);
                    }
                }

            }

        }
    }
    for (int l = 0; l < Model.Seatmaplist.datalist.Count; l++)
    {
        if (l == 0)
        {
            <div class="service-section">
                <div id="tabshow1" class="seat-section">

                    <div class="inner-section">
                        A
                        <ul class="column">
                            <li class="seat-li row-no">F</li>
                            <li class="seat-li row-no">E</li>
                            <li class="seat-li row-no">D</li>
                            <li class="seat-li row-no"></li>
                            <li class="seat-li row-no">C</li>
                            <li class="seat-li row-no">B</li>
                            <li class="seat-li row-no">A</li>
                        </ul>

                        @{
                            @for (int i = 1; i <= 30; i++)
                            {

                                <ul class="column" id="itemList">
                                    @{
                                        for (int k = 6; k >= 1; k--)
                                        {
                                            string data = string.Empty;
                                            if (k == 6) { data = i.ToString() + "F"; }
                                            else if (k == 5) { data = i.ToString() + "E"; }
                                            else if (k == 4) { data = i.ToString() + "D"; }
                                            else if (k == 3) { data = i.ToString() + "C"; }
                                            else if (k == 2) { data = i.ToString() + "B"; }
                                            else if (k == 1) { data = i.ToString() + "A"; }
                                            var designation = data;
                                            if (!ht0.Contains(data))
                                            {
                                                <li class="seat-li chkbox">
                                                    <input type="checkbox" name="unitKey" value="" class="chkbox" disabled />
                                                </li>
                                            }
                                            else
                                            {


                                                // var group1 = @Model.Seatmaplist.datalist[0].seatMap.decks.units[i].group;
                                                // var group = Model.Seatmaplist.datalist[0].seatMapfees.groups[i].groupsFee.groupid;
                                                // var feeamountF1 = @Model.Seatmaplist.datalist[0].seatMapfees.groups[group].groupsFee.serviceCharges[0].amount;

                                                // if (feeamountF1 == 0)
                                                // {
                                                //     <li class="seat-li free-seat tooltip">
                                                //         <input type="hidden" id="passengerkey" name="passengerkey" value="@Model.passeengerlist.passengers[0].passengerKey" />
                                                //         <input type="checkbox" name="unitKey" value="@Model.Seatmaplist.datalist[0].seatMapfees.groups[group].groupsFee.serviceCharges[0].amount _@Model.Seatmaplist.datalist[0].seatMap.decks.units[i].unitKey" id="unitKey" />
                                                //         <span class="tooltiptext">@data <span>&#8377; @feeamountF1</span></span>
                                                //     </li>
                                                // }
                                                // else
                                                // {
                                                //     <li class="seat-li midcomfort tooltip">
                                                //         <input type="hidden" id="passengerkey" name="passengerkey" value="@Model.passeengerlist.passengers[0].passengerKey" />
                                                //         <input type="checkbox" name="unitKey" value="@Model.Seatmaplist.datalist[0].seatMapfees.groups[group].groupsFee.serviceCharges[0].amount _@Model.Seatmaplist.datalist[0].seatMap.decks.units[i].unitKey" id="unitKey" />
                                                //         <span class="tooltiptext">@data <span>&#8377; @feeamountF1</span></span>
                                                //     </li>
                                                // }

                                                string[] feessplit = ht0[data].ToString().Split("_@");
                                                string feeamountF1 = feessplit[0];
                                                // string feeamountF1 = ht0[data].ToString();
                                                if (feeamountF1 == "0")
                                                {
                                                    <li class="seat-li free-seat tooltip">
                                                        <input type="hidden" id="passengerkey" name="passengerkey" value="@Model.passeengerlist.passengers[0].passengerKey" />
                                                        <input type="checkbox" class="mycheck" name="unitKey" value="@feeamountF1 _@feessplit[1] _@data _@l _@feessplit[2]" id="unitKey_@l" />
                                                        <span class="tooltiptext">@data <span>&#8377; @feeamountF1</span></span>
                                                    </li>
                                                }
                                                else
                                                {
                                                    <li class="seat-li midcomfort tooltip">
                                                        <input type="hidden" id="passengerkey" name="passengerkey" value="@Model.passeengerlist.passengers[0].passengerKey" />
                                                        <input type="checkbox" class="mycheck" name="unitKey" value="@feeamountF1 _@feessplit[1] _@data _@l _@feessplit[2] " id="unitKey" />
                                                        <span class="tooltiptext">@data <span>&#8377; @feeamountF1</span></span>
                                                    </li>
                                                }


                                            }

                                            if (k == 4)
                                            {
                                                <li class="seat-li"></li>
                                            }

                                            <li class="seat-li colNo left">@i</li>
                                        }
                                    }

                                </ul>
                            }
                        }
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="service-section">
                <div id="tabshow2" class="seat-section">

                    <div class="inner-section">
                        B
                        <ul class="column">
                            <li class="seat-li row-no">F</li>
                            <li class="seat-li row-no">E</li>
                            <li class="seat-li row-no">D</li>
                            <li class="seat-li row-no"></li>
                            <li class="seat-li row-no">C</li>
                            <li class="seat-li row-no">B</li>
                            <li class="seat-li row-no">A</li>
                        </ul>

                        @{
                            @for (int i = 1; i <= 30; i++)
                            {

                                <ul class="column" id="itemList">
                                    @{
                                        for (int k = 6; k >= 1; k--)
                                        {
                                            string data = string.Empty;
                                            if (k == 6) { data = i.ToString() + "F"; }
                                            else if (k == 5) { data = i.ToString() + "E"; }
                                            else if (k == 4) { data = i.ToString() + "D"; }
                                            else if (k == 3) { data = i.ToString() + "C"; }
                                            else if (k == 2) { data = i.ToString() + "B"; }
                                            else if (k == 1) { data = i.ToString() + "A"; }
                                            var designation = data;
                                            if (!ht1.Contains(data))
                                            {
                                                <li class="seat-li chkbox">
                                                    <input type="checkbox" name="unitKey" value="" class="chkbox" disabled />
                                                </li>
                                            }
                                            else
                                            {
                                                //  string feeamountF1 = ht1[data].ToString();
                                                // var group = Model.Seatmaplist.datalist[1].seatMapfees.groups[i].groupsFee.groupid;
                                                // var feeamountF1 = @Model.Seatmaplist.datalist[1].seatMapfees.groups[group].groupsFee.serviceCharges[0].amount;
                                                // if (feeamountF1 == 0)
                                                // {
                                                //     <li class="seat-li free-seat tooltip">
                                                //         <input type="hidden" id="passengerkey" name="passengerkey" value="@Model.passeengerlist.passengers[0].passengerKey" />
                                                //         <input type="checkbox" name="unitKey" value="@Model.Seatmaplist.datalist[1].seatMapfees.groups[0].groupsFee.serviceCharges[0].amount _@Model.Seatmaplist.datalist[1].seatMap.decks.units[i].unitKey" id="unitKey" />
                                                //         <span class="tooltiptext">@data <span>&#8377; @feeamountF1</span></span>
                                                //     </li>


                                                // }
                                                // else
                                                // {
                                                //     <li class="seat-li midcomfort tooltip">
                                                //         <input type="hidden" id="passengerkey" name="passengerkey" value="@Model.passeengerlist.passengers[0].passengerKey" />
                                                //         <input type="checkbox" name="unitKey" value="@Model.Seatmaplist.datalist[1].seatMapfees.groups[0].groupsFee.serviceCharges[0].amount _@Model.Seatmaplist.datalist[1].seatMap.decks.units[i].unitKey" id="unitKey" />
                                                //         <span class="tooltiptext">@data <span>&#8377; @feeamountF1</span></span>
                                                //     </li>
                                                // }
                                                string[] feessplit = ht1[data].ToString().Split("_@");
                                                string feeamountF1 = feessplit[0];//ht1[data].ToString();
                                                if (feeamountF1 == "0")
                                                {
                                                    <li class="seat-li free-seat tooltip">
                                                        <input type="hidden" id="passengerkey" name="passengerkey" value="@Model.passeengerlist.passengers[0].passengerKey" />
                                                        <input type="checkbox" class="mycheck2" name="unitKey" value="@feeamountF1 _@feessplit[1] _@data _@l _@feessplit[2] " id="unitKey" />
                                                        <span class="tooltiptext">@data <span>&#8377; @feeamountF1</span></span>
                                                    </li>
                                                }
                                                else
                                                {
                                                    <li class="seat-li midcomfort tooltip">
                                                        <input type="hidden" id="passengerkey" name="passengerkey" value="@Model.passeengerlist.passengers[0].passengerKey" />
                                                        <input type="checkbox" class="mycheck2" name="unitKey" value="@feeamountF1 _@feessplit[1] _@data _@l _@feessplit[2] " id="unitKey" />
                                                        <span class="tooltiptext">@data <span>&#8377; @feeamountF1</span></span>
                                                    </li>
                                                }


                                            }

                                            if (k == 4)
                                            {
                                                <li class="seat-li"></li>
                                            }

                                            <li class="seat-li colNo left">@i</li>
                                        }
                                    }

                                </ul>
                            }
                        }
                    </div>
                </div>
            </div>
        }
    }
}
        @* ----------End--------- *@
        <div class="wing-right">&nbsp;</div>
        <div class="service-section">
            <div class="legendHolder-box">
                <ul>

                    <li style="padding:0;"><strong>Legend:</strong></li>
                    <li><span class="free"></span>Free Seats</li>
                    <li><span class="midcomfort"></span>&#8377; 150 - &#8377; 350</li>
                    <li><span class="comfort"></span>&#8377; 400 - &#8377; 800</li>
                    <li><span class="booked"></span>Occupied</li>

                </ul>
                <p><strong>Disclaimer:</strong> Seat allotment is the sole prerogative of the airline and can't be guaranteed by Yatra.com</p>
            </div>
        </div>
</div>
</div>
<script src="~/js/custom.js/customnew.js"></script>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/jquery/dist/jquery.js"></script>
<style>
    .popinput1 input {
        width: 40px;
        border: 1px solid green;
        background: green;
        color: #fff;
        padding-left: 8px;
    }

    .popinput1 {
        padding: 0px 15px 0px 0px;
    }

    .popinput2 {
        padding: 0px 15px 0px 0px;
    }

        .popinput2 input {
            width: 40px;
            border: 1px solid green;
            background: green;
            color: #fff;
            padding-left: 8px;
        }

    .active {
        color: #E93329 !important;
        border-bottom: 1px solid #E93329 !important;
    }
</style>
<script type="text/javascript">
    /*********seatmap_tab_select_function_ServiceRequest_PartialView_Page***********/
    $(document).ready(function () {
        $("#seattab1").addClass('active');
        $("#tabshow2").hide();
        $("#passtab2").hide();
        $("#popbtnB").hide();
        $("#popbtnA").show();
        $("#seattab1").click(function () {
            alert("A");
            $("#tabshow1").show();
            $("#tabshow2").hide();
            $("#passtab1").show();
            $("#passtab2").hide();
            $("#popbtnB").hide();
            $("#popbtnA").show();
            $("#seattab1").addClass('active');
            $("#seattab2").removeClass('active');

        });

        $("#seattab2").click(function () {
            alert("B");
            $("#tabshow2").css("display", "block");
            $("#seattab2").addClass('active');
            $("#seattab1").removeClass('active');
            $("#tabshow1").hide();
            $("#passtab2").show();
            $("#popbtnB").show();
            $("#popbtnA").hide();
            $("#passtab1").hide();
        });
    });
</script>

<script>

    $(document).ready(function () {

        var count = $("#passengercountid").val();
        $('.mycheck').on('change', function () {
            if ($('.mycheck:checked').length > count) {
                alert('You can only ' + count + ' select checkboxes.');
                this.checked = false;
            }
        });

        $('.mycheck2').on('change', function () {
            if ($('.mycheck2:checked').length > count) {
                alert('You can only ' + count + ' select checkboxes.');
                this.checked = false;
            }
        });


        var checkedValues = ['', '', '', '','','','','','',''];
        $('.mycheck').change(function () {
            // debugger;
            if ($(this).is(':checked')) {
                debugger;
                for (var i = 0; i < count; i++) {
                    if (checkedValues[i] === '') {
                        checkedValues[i] = $(this).val();
                        break;
                    }
                }
            } else {
                var index = checkedValues.indexOf($(this).val());
                console.log(index)
                if (index !== -1) {
                    checkedValues[index] = '';
                }
            }
            $('#input_0').val(checkedValues[0]);
            $('#input_1').val(checkedValues[1]);
            $('#input_2').val(checkedValues[2]);
            $('#input_3').val(checkedValues[3]);
            $('#input_4').val(checkedValues[4]);
            $('#input_5').val(checkedValues[5]);
            $('#input_6').val(checkedValues[6]);
             $('#input_7').val(checkedValues[7]);
              $('#input_8').val(checkedValues[8]);
           // $('#input_3').val(checkedValues[3]);
            updateInputsAndSpans(checkedValues);

        });

        function updateInputsAndSpans(checkedValues) {
            debugger;
            for (var i = 0; i < checkedValues.length; i++) {
                // debugger;
                var parts = checkedValues[i].split('_');
                $('#input_' + i).val(parts[2]);
                $('#feeSpan_' + i).text(parts[0]);
                $('#outputDiv_' + i).text(parts[2]);
            }
        }



        //Connceting 2 seat Code js
        var checkedValues2 = ['', '', '', '','','','','',''];
        $('.mycheck2').change(function () {
            debugger;
            if ($(this).is(':checked')) {
                // debugger;
                for (var i = 0; i < count; i++) {
                    if (checkedValues2[i] === '') {
                        checkedValues2[i] = $(this).val();
                        break;
                    }
                }
            } else {
                var index = checkedValues2.indexOf($(this).val());
                console.log(index)
                if (index !== -1) {
                    checkedValues2[index] = '';
                }
            }
            $('#inputConnect_0').val(checkedValues2[0]);
            $('#inputConnect_1').val(checkedValues2[1]);
            $('#inputConnect_2').val(checkedValues2[2]);
            $('#inputConnect_3').val(checkedValues2[3]);
            $('#inputConnect_4').val(checkedValues2[4]);
            $('#inputConnect_5').val(checkedValues2[5]);
            $('#inputConnect_6').val(checkedValues2[6]);
            $('#inputConnect_7').val(checkedValues2[7]);
            $('#inputConnect_8').val(checkedValues2[8]);
            updateInputsAndSpans2(checkedValues2);

        });

        function updateInputsAndSpans2(checkedValues2) {
            // debugger;
            for (var i = 0; i < checkedValues2.length; i++) {
                // debugger;
                var parts = checkedValues2[i].split('_');
                $('#inputConnect_' + i).val(parts[2]);
                $('#feeSpanConnect_' + i).text(parts[0]);
                $('#outputDivConnect_' + i).text(parts[2]);
            }
        }
        // End connceting second code
        // Function for handling seat checkboxes
        $('input[name="unitKey"]').on('change', function () {
            var selectedIds = [];
            debugger;
            $('input[name="unitKey"]:checked').each(function () {
                selectedIds.push($(this).val());
            });
            var total = 0;
            $('input[name="unitKey"]:checked').each(function () {
                total += parseInt($(this).val());
            });
            $('#total').text(total.toFixed(2));
            document.getElementById("total").value = total.toFixed(2);
            const seatmap1 = document.getElementById("total").value;
            localStorage.setItem("selectedIds", JSON.stringify(selectedIds));
            updateCombinedTotal();


        });


    });



</script>
