@model DomainLayer.ViewModel.ViewModel

@{
    Layout = null;
    var abc = Model;

}
<style>
    .btn2 {
        border: 1px solid #0057bb;
        padding: 4px 26px;
        border-radius: 2px;
        margin-top: 6px;
    }

    .input-ammount2 {
        color: #f80711;
        background: none;
        justify-content: start;
        display: flex;
        width: 100px;
        border: none;
    }

    .seat-section1 {
        overflow: hidden;
        overflow-y: scroll;
        max-height: 350px;
    }

    .mealAddFareBtn {
        border-radius: 3px;
        box-shadow: 0 0 5px 0 rgba(0,0,0,.2);
        background-color: #fff !important;
        width: 90px;
        text-align: center;
        font-size: 12px;
        font-weight: 700;
        color: #000 !important;
        text-transform: uppercase;
        outline: 0;
        border: 0;
        padding: 8px;
    }

    .mealbtn-increase {
        background: #fff;
        justify-content: space-between;
        padding: 6px;
        border-radius: 3px;
        width: 90px;
        box-shadow: 0 0 5px 0 rgba(0,0,0,.2);
    }

    .meal-decr {
        color: #1685e7;
        font-weight: 700;
    }

    .meal-incr {
        color: #1685e7;
        font-weight: 700;
    }

    .mealinput {
        width: 30px;
        text-align: center;
        border: none;
    }

        .mealinput input {
            outline: none;
        }

    .mealbtn {
        padding: 8px;
    }

    .img-bg {
        width: 120px;
    }

        .img-bg img {
            background: #b7e3c3;
            padding: 10px;
            max-width: 100%;
            border-radius: 10px;
        }
</style>


<div class="relative overflow-hidden js-section-slider pt-10 sm:pt-20" data-gap="30" data-scrollbar data-slider-cols="xl-5 lg-4 md-3 sm-2 base-2" data-nav-prev="js-tour-prev" data-pagination="js-tour-pag" data-nav-next="js-tour-next">
    @{
        int datasegmentCount = Model.Meals.legSsrs.Count;
        <input type="hidden" value="@datasegmentCount" class="datasegmentCounttt" />

    }
    @for (int r = 0; r < Model.Meals.legSsrs.Count; r++)
    {
        if (r == 0)
        {
            <div id="tabshow3" class="seat-section1">
                A
                <div class="swiper-wrapper flex-column slid-rght">

                    @{
                        for (int s = 0; s < Model.Meals.legSsrs[0].legssrs.Count; s++)
                        {
                            for (int q = 0; q < Model.Meals.legSsrs[0].legssrs[s].legpassengers.Count; q++)
                            {
                                <div class="swiper-slide active" style="max-width:100%;">
                                    <div class="tourTypeCard__content text-center pt-10 pb-24 px-10 bg-blue-1-05 rounded-4">
                                        <span class="nveg-food"></span>


                                        <div class="d-flex bg-light justify-content-between align-items-center p-3">
                                            <div class="d-flex">
                                                <div class="img-bg p-1">
                                                    @{
                                                        // Assuming you have a variable named mealImage dynamically assigned based on some condition
                                                        string MealImagelist = string.Empty;
                                                        string querymeal = @Model.Meals.legSsrs[0].legssrs[s].ssrCode;
                                                        var Mealdata = MealImageList.GetAllmeal().Where(x => x.MealCode == querymeal).SingleOrDefault();

                                                        if (Mealdata != null)
                                                        {
                                                            MealImagelist =MealImageList.GetAllmeal().Where(x => x.MealCode == querymeal).SingleOrDefault().MealImage;
                                                        }


                                                    }

                                                    <img src="~/img/images/@MealImagelist" title="image" alt="image">
                                                </div>
                                                <div class="mealtext break-word p-1">
                                                    <h6 class="text-14 fw-600 mt-10">@Model.Meals.legSsrs[0].legssrs[s].name </h6>
                                                    <div class="d-flex">
                                                        <div class="text-danger">&#8377</div>
                                                        <div><input class="input-ammount2" id="inputField" type="text" name="inputField" value="@Model.Meals.legSsrs[0].legssrs[s].legpassengers[q].price" /></div>
                                                        <input type="hidden" id="mealprice+@s" name="inputFieldmeal" value=" @Model.Meals.legSsrs[0].legssrs[s].legpassengers[q].price" />
                                                        <input type="hidden" id="passengerkey" name="passengerkey" value="@Model.passeengerlist.passengers[0].passengerKey" />
                                                        <input type="hidden" id="passengerscount" name="passengerscount" value="@Model.passeengerlist.passengerscount" />
                                                        <input type="hidden" class="ssrKeyMeals" name="ssrKey" value="@Model.Meals.legSsrs[0].legssrs[s].legpassengers[q].ssrKey" />
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="mealbtn">
                                                <div class="mealAddFareBtn btnnew" id="mealAddID">Add</div>
                                                <div id="incrSign" class="incrSignCls" style="display:none">
                                                    <div class="d-flex mealbtn-increase">
                                                        <div class="meal-decr">-</div>
                                                        <input type="number" class="mealinput" value="0">
                                                        <div class="meal-incr">+</div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                </div>

                            }
                        }
                    }

                </div>
            </div>
        }
        else
        {
            <div id="tabshow4" class="seat-section1">
                B
                <div class="swiper-wrapper flex-column slid-rght">

                    @{
                        for (int s = 0; s < Model.Meals.legSsrs[1].legssrs.Count; s++)
                        {
                            for (int q = 0; q < Model.Meals.legSsrs[1].legssrs[s].legpassengers.Count; q++)
                            {

                                <div class="swiper-slide active" style="max-width:100%;">
                                    <div class="tourTypeCard__content text-center pt-10 pb-24 px-10 bg-blue-1-05 rounded-4">
                                        <span class="nveg-food"></span>
                                        <div class="d-flex bg-light justify-content-between align-items-center p-3">
                                            <div class="d-flex">
                                                <div class="img-bg p-1">
                                                    @{
                                                        // Assuming you have a variable named mealImage dynamically assigned based on some condition
                                                        string MealImagelist = string.Empty;
                                                        string querymeal = @Model.Meals.legSsrs[1].legssrs[s].ssrCode;
                                                        var Mealdata = MealImageList.GetAllmeal().Where(x => x.MealCode == querymeal).SingleOrDefault();

                                                        if (Mealdata != null)
                                                        {
                                                            MealImagelist = MealImageList.GetAllmeal().Where(x => x.MealCode == querymeal).SingleOrDefault().MealImage;
                                                        }



                                                    }

                                                    <img src="~/img/images/@MealImagelist" title="image" alt="image">
                                                </div>
                                                <div class="mealtext break-word p-1">
                                                    <h6 class="text-14 fw-600 mt-10">@Model.Meals.legSsrs[1].legssrs[s].name </h6>
                                                    <div class="d-flex">
                                                        <div class="text-danger">&#8377</div>
                                                        <div><input class="input-ammount2" id="inputField" type="text" name="inputField" value=" @Model.Meals.legSsrs[1].legssrs[s].legpassengers[q].price" /></div>
                                                    </div>
                                                </div>

                                            </div>
                                            <div class="d-flex justify-content-center">
                                                @*<input type="checkbox" id="ssrkey+@s" name="ssrKey" value='"@Model.Meals.legSsrs[1].legssrs[s].legpassengers[q].ssrKey _ @Model.Meals.legSsrs[1].legssrs[s].legpassengers[q].price "' />
                            <input type="checkbox" class="meal-ammount" value="@Model.Meals.legSsrs[1].legssrs[s].legpassengers[q].price" />*@
                                                <input type="hidden" id="mealprice+@s" name="inputFieldmeal" value=" @Model.Meals.legSsrs[1].legssrs[s].legpassengers[q].price" />
                                                <input type="hidden" id="passengerkey" name="passengerkey" value="@Model.passeengerlist.passengers[0].passengerKey" />
                                                <input type="hidden" id="passengerscount" name="passengerscount" value="@Model.passeengerlist.passengerscount" />
                                                <input type="hidden" class="ssrKeyMeals" name="ssrKey" value="@Model.Meals.legSsrs[1].legssrs[s].legpassengers[q].ssrKey" />

                                            </div>
                                            <div class="mealbtn">
                                                <div class="mealAddFareBtn btnnew" id="mealAddID">Add</div>
                                                <div id="incrSign" class="incrSignCls" style="display:none">
                                                    <div class="d-flex mealbtn-increase">
                                                        <div class="meal-decr">-</div>
                                                        <input type="number" class="mealinput" value="0">
                                                        <div class="meal-incr">+</div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                </div>
                            }

                        }

                    }

                </div>
            </div>
        }
    }

</div>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.4/jquery.min.js"></script>
<script src="~/js/custom.js/customnew.js"></script>

<script>

    /****************************************** */
    $(document).ready(function () {
        var aarrayssrkey = [];
        var mlC = $("#passengerscount").val();

        var xyz = $(".datasegmentCounttt").val();
        mlC = mlC * xyz;
        alert("segmentcount" + mlC);

        var totalIncrementCount = 0;
        const mealAddButtons = document.querySelectorAll('.mealbtn .mealAddFareBtn');
        mealAddButtons.forEach(function (mealAddButton) {
            mealAddButton.addEventListener('click', function () {
                debugger;
                const parentFlexElement = this.closest('.d-flex');
                parentFlexElement.querySelector('.incrSignCls').style.display = "block";
                parentFlexElement.querySelector('.mealAddFareBtn').style.display = "none";
                const incrButton = parentFlexElement.querySelector('.meal-incr');
                const decrButton = parentFlexElement.querySelector('.meal-decr');
                const mealInput = parentFlexElement.querySelector('.mealinput');
                var ssrKeyMealsData = parentFlexElement.querySelector('.ssrKeyMeals');

                incrButton.addEventListener('click', function () {

                    if (totalIncrementCount >= mlC) {
                        alert("You can't add more than " + mlC + " items.");
                        return false;
                    }
                    else {
                        mealInput.value = parseInt(mealInput.value) + 1;
                        totalIncrementCount += 1;

                    }
                    var Mealcount = mealInput.value;
                    localStorage.setItem("Mealcount", Mealcount);

                    var ssrkeydata = ssrKeyMealsData.value;
                    alert("hello" + ssrkeydata);

                    aarrayssrkey.push(ssrkeydata);
                    alert(aarrayssrkey.length);


                    // localStorage.setItem("aarrayssrkey", aarrayssrkey);
                    localStorage.setItem("aarrayssrkey", JSON.stringify(aarrayssrkey));

                    if (parseInt(mealInput.value) > 0) {
                        parentFlexElement.querySelector('.incrSignCls').style.display = "block";
                    } else {
                        parentFlexElement.querySelector('.mealAddFareBtn').style.display = "none";
                    }
                });
                //************Decreament Button Click Function**************
                decrButton.addEventListener('click', function () {
                    if (parseInt(mealInput.value) > 1) {
                        mealInput.value = parseInt(mealInput.value) - 1;
                        totalIncrementCount -= 1;
                    } else {
                        parentFlexElement.querySelector('.mealAddFareBtn').style.display = "none";
                    }
                });

            });
        });

        $('input[type="checkbox"]').on('change', function () {
            var selectedIds = [];
            debugger;
            $('input[type="checkbox"]:checked').each(function () {
                selectedIds.push($(this).val());
                alert(selectedIds);

            });

            //localStorage.setItem('selectedIds', selectedIds);
            localStorage.setItem("selectedIds", JSON.stringify(selectedIds));

            var input = document.getElementsByName("unitKey");
            var total = 0;
            for (var i = 0; i < input.length; i++) {
                if (input[i].checked) {
                    total += parseInt(input[i].value);
                }
            }
            document.getElementById("total").value = total.toFixed(2);


        });
        const mealAddButton = document.getElementById('Continuebtn');
        mealAddButton.onclick = function () {
            debugger;
            var MealAddCount = localStorage.getItem("Mealcount");
            var mealInputValue = MealAddCount;


            var ssrkeydatacount = JSON.parse(localStorage.getItem("aarrayssrkey"));
            var ssrKey = ssrkeydatacount;
            alert(ssrKey);
            //var selectedIdsCount = localStorage.getItem("selectedIds", JSON.stringify(selectedIds));
            var unitKey = JSON.parse(localStorage.getItem("selectedIds"));
            alert(unitKey);

            $.ajax({
                url: "/AATripsell/PostUnitkey",
                type: "POST",
                contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                data: { unitKey: unitKey, ssrKey: ssrKey },
                success: function (data) {
                    alert(data);
                    window.location.href ='/OnewayPayment/OnewayPaymentView';
                },
                error: function (err) {
                    console.error(err);
                }
            });

        };
        /*********seatmap_tab_select_function_ServiceRequest_PartialView_Page**********/
        $("#mealtab1way").click(function () {
            alert("A");
            $("#tabshowRTmealA").show();
            $("#tabshowRTmealC").hide();
            $("#mealtab1way").addClass('activeblue');
            $("#mealtabRT1way").removeClass('activeblue');
        });
        $("#mealtabRT1way").click(function () {
            alert("C");
            $("#tabshowRTmealA").hide();
            $("#tabshowRTmealC").show();
            $("#mealtabRT1way").addClass('activeblue');
            $("#mealtab1way").removeClass('activeblue');
        });
        //Meal tab Function
        $("#tabshowRTmealB").hide();
        $("#tabshowRTmealC").hide();
        $("#tabshowRTmealD").hide();
        $("#mealtab1").click(function () {
            alert("A");
            $("#tabshowRTmealA").show();
            $("#tabshowRTmealB").hide();
            $("#tabshowRTmealC").hide();
            $("#tabshowRTmealD").hide();
            $("#mealtab1").addClass('activeblue');
            $("#mealtab2").removeClass('activeblue');
            $("#mealtabRT1").removeClass('activeblue');
            $("#mealtabRT2").removeClass('activeblue');

        });
        $("#mealtab2").click(function () {
            alert("B");
            $("#tabshowRTmealB").show();
            $("#tabshowRTmealA").hide();
            $("#tabshowRTmealC").hide();
            $("#tabshowRTmealD").hide();
            $("#mealtab2").addClass('activeblue');
            $("#mealtab1").removeClass('activeblue');
            $("#mealtabRT2").removeClass('activeblue');
            $("#mealtabRT1").removeClass('activeblue');

        });
        $("#mealtabRT1").click(function () {
            alert("C");
            $("#tabshowRTmealC").show();
            $("#tabshowRTmealA").hide();
            $("#tabshowRTmealB").hide();
            $("#tabshowRTmealD").hide();
            $("#mealtabRT1").addClass('activeblue');
            $("#mealtabRT2").removeClass('activeblue');
            $("#mealtab2").removeClass('activeblue');
            $("#mealtab1").removeClass('activeblue');


        });
        $("#mealtabRT2").click(function () {
            alert("D");
            $("#tabshowRTmealD").show();
            $("#tabshowRTmealA").hide();
            $("#tabshowRTmealB").hide();
            $("#tabshowRTmealC").hide();
            $("#mealtabRT2").addClass('activeblue');
            $("#mealtabRT1").removeClass('activeblue');
            $("#mealtab2").removeClass('activeblue');
            $("#mealtab1").removeClass('activeblue');

        });
    });
</script>

<script>
    /*********seatmap_tab_select_function_ServiceRequest_PartialView_Page***********/
    $(document).ready(function () {


        $("#seattab3").addClass('active');
        $("#tabshow4").hide();
        $("#seattab3").click(function () {
            $("#tabshow3").show();
            $("#tabshow4").hide();
            $("#seattab3").addClass('active');
            $("#seattab4").removeClass('active');

        });

        $("#seattab4").click(function () {
            //$("#tabshow4").css("display", "block");
            $("#tabshow4").show();
            $("#seattab4").addClass('active');
            $("#seattab3").removeClass('active');
            $("#tabshow3").hide();
        });


    });
</script>

















































@* @model DomainLayer.ViewModel.ViewModel

@{
    Layout = null;
    var abc = Model;

}

 <style>
    .btn2 {
        border: 1px solid #0057bb;
        padding: 4px 26px;
        border-radius: 2px;
        margin-top: 6px;
    }

    .input-ammount2 {
        color: #f80711;
        background: none;
        text-align: center;
        width: 100px;
        border: none;
    }
</style>


<div class="relative overflow-hidden js-section-slider pt-10 sm:pt-20" data-gap="30" data-scrollbar data-slider-cols="xl-5 lg-4 md-3 sm-2 base-2" data-nav-prev="js-tour-prev" data-pagination="js-tour-pag" data-nav-next="js-tour-next">

    @for (int r = 0; r < Model.Meals.legSsrs.Count; r++)
    {
        if (r == 0)
        {
            <div id="tabshow3" class="seat-section1">
                A
                <div class="swiper-wrapper">
                    @{
                        for (int s = 0; s < Model.Meals.legSsrs[0].legssrs.Count; s++)
                        {
                            for (int q = 0; q < Model.Meals.legSsrs[0].legssrs[s].legpassengers.Count; q++)
                            {
                                <div class="swiper-slide active">
                                    <div class="tourTypeCard__content text-center pt-10 pb-24 px-10 bg-blue-1-05 rounded-4">

                                        @{
                                            // Assuming you have a variable named mealImage dynamically assigned based on some condition
                                            string MealImagelist = string.Empty;
                                            string querymeal = @Model.Meals.legSsrs[0].legssrs[s].ssrCode;
                                            var Mealdata = DomainLayer.Model.MealImageList.GetAllmeal().Where(x => x.MealCode == querymeal).SingleOrDefault();

                                            if (Mealdata != null)
                                            {
                                                MealImagelist = DomainLayer.Model.MealImageList.GetAllmeal().Where(x => x.MealCode == querymeal).SingleOrDefault().MealImage;
                                            }



                                        }

                                        <img src="~/img/images/@MealImagelist" title="image" alt="image" />
                                        <h5 class="text-16 fw-700 mt-6">meal</h5>
                                        <h5 class="text-16 fw-700 mt-6">@Model.Meals.legSsrs[0].legssrs[s].name</h5>

                                        <p class="text-14 fw-600 mt-2 text-center">&#8377; @Model.Meals.legSsrs[0].legssrs[s].legpassengers[q].price</p>
                                        <div class="d-flex justify-content-center">
                                            <input type="hidden" id="passengerkey" name="passengerkey" value="@Model.passeengerlist.passengers[0].passengerKey" />
                                            <input type="checkbox" id="ssrKeymeal" name="ssrKey" value="@Model.Meals.legSsrs[0].legssrs[s].legpassengers[q].ssrKey" />
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    }
                </div>
            </div>
        }
        else
        {
            <div id="tabshow4" class="seat-section2">
                B
                <div class="swiper-wrapper">
                    @{

                        for (int s = 0; s < Model.Meals.legSsrs[1].legssrs.Count; s++)
                        {
                            for (int q = 0; q < Model.Meals.legSsrs[1].legssrs[s].legpassengers.Count; q++)
                            {
                                <div class="swiper-slide active">
                                    <div class="tourTypeCard__content text-center pt-10 pb-24 px-10 bg-blue-1-05 rounded-4">

                                        @{
                                            // Assuming you have a variable named mealImage dynamically assigned based on some condition
                                            string MealImagelist = string.Empty;
                                            string querymeal = @Model.Meals.legSsrs[1].legssrs[s].ssrCode;
                                            var Mealdata = DomainLayer.Model.MealImageList.GetAllmeal().Where(x => x.MealCode == querymeal).SingleOrDefault();

                                            if (Mealdata != null)
                                            {
                                                MealImagelist = DomainLayer.Model.MealImageList.GetAllmeal().Where(x => x.MealCode == querymeal).SingleOrDefault().MealImage;
                                            }



                                        }
                                        <img src="~/img/images/@MealImagelist" title="image" alt="image">
                                        <h5 class="text-16 fw-700 mt-6">@Model.Meals.legSsrs[1].legssrs[s].name</h5>
                                        <p class="text-14 fw-600 mt-2 text-center">&#8377; @Model.Meals.legSsrs[1].legssrs[s].legpassengers[q].price</p>
                                        <div class="d-flex justify-content-center">
                                            <input type="hidden" id="passengerkey" name="passengerkey" value="@Model.passeengerlist.passengers[0].passengerKey" />
                                            <input type="checkbox" id="ssrKeymeal" name="ssrKey" value="@Model.Meals.legSsrs[1].legssrs[s].legpassengers[q].ssrKey" />
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    }
                </div>
            </div>
        }
    }
</div>

 *@