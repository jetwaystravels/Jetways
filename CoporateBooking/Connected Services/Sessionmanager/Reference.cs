//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sessionmanager
{
    
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(APISecurityFault))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(APIValidationFault))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(APIWarningFault))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(APIUnhandledServerFault))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(APICriticalFault))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(APIGeneralFault))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
    public partial class APIFault
    {
        
        private string errorCodeField;
        
        private string errorTypeField;
        
        private string messageField;
        
        private string uniqueIDField;
        
        private string stackTraceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string ErrorCode
        {
            get
            {
                return this.errorCodeField;
            }
            set
            {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string ErrorType
        {
            get
            {
                return this.errorTypeField;
            }
            set
            {
                this.errorTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public string Message
        {
            get
            {
                return this.messageField;
            }
            set
            {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string UniqueID
        {
            get
            {
                return this.uniqueIDField;
            }
            set
            {
                this.uniqueIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=4)]
        public string StackTrace
        {
            get
            {
                return this.stackTraceField;
            }
            set
            {
                this.stackTraceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.navitaire.com/Ncl/Validation/ValidationResult")]
    public partial class ValidationResult
    {
        
        private Sessionmanager.ArrayOfXElement annotationsField;
        
        private string failedValidationDescriptionField;
        
        private string keyField;
        
        private bool successfulField;
        
        private bool successfulFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public Sessionmanager.ArrayOfXElement Annotations
        {
            get
            {
                return this.annotationsField;
            }
            set
            {
                this.annotationsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string FailedValidationDescription
        {
            get
            {
                return this.failedValidationDescriptionField;
            }
            set
            {
                this.failedValidationDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public string Key
        {
            get
            {
                return this.keyField;
            }
            set
            {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool Successful
        {
            get
            {
                return this.successfulField;
            }
            set
            {
                this.successfulField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SuccessfulSpecified
        {
            get
            {
                return this.successfulFieldSpecified;
            }
            set
            {
                this.successfulFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Session")]
    public partial class LogonRequestData
    {
        
        private string domainCodeField;
        
        private string agentNameField;
        
        private string passwordField;
        
        private string locationCodeField;
        
        private string roleCodeField;
        
        private string terminalInfoField;
        
        private string clientNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string DomainCode
        {
            get
            {
                return this.domainCodeField;
            }
            set
            {
                this.domainCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string AgentName
        {
            get
            {
                return this.agentNameField;
            }
            set
            {
                this.agentNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public string Password
        {
            get
            {
                return this.passwordField;
            }
            set
            {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public string LocationCode
        {
            get
            {
                return this.locationCodeField;
            }
            set
            {
                this.locationCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=4)]
        public string RoleCode
        {
            get
            {
                return this.roleCodeField;
            }
            set
            {
                this.roleCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=5)]
        public string TerminalInfo
        {
            get
            {
                return this.terminalInfoField;
            }
            set
            {
                this.terminalInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=6)]
        public string ClientName
        {
            get
            {
                return this.clientNameField;
            }
            set
            {
                this.clientNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
    public partial class APISecurityFault : APIFault
    {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
    public partial class APIValidationFault : APIFault
    {
        
        private ValidationResult[] validationResultsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://www.navitaire.com/Ncl/Validation/ValidationResult")]
        public ValidationResult[] ValidationResults
        {
            get
            {
                return this.validationResultsField;
            }
            set
            {
                this.validationResultsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(APIUnhandledServerFault))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
    public partial class APIWarningFault : APIFault
    {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
    public partial class APIUnhandledServerFault : APIWarningFault
    {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
    public partial class APICriticalFault : APIFault
    {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
    public partial class APIGeneralFault : APIFault
    {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.navitaire.com/WebServices", ConfigurationName="Sessionmanager.ISessionManager")]
    public interface ISessionManager
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.navitaire.com/WebServices/ISessionManager/ChangePassword", ReplyAction="http://schemas.navitaire.com/WebServices/ISessionManager/ChangePasswordResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Sessionmanager.APIFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/ChangePasswordAPIFaultFa" +
            "ult", Name="APIFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(Sessionmanager.APIGeneralFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/ChangePasswordAPIGeneral" +
            "FaultFault", Name="APIGeneralFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(Sessionmanager.APICriticalFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/ChangePasswordAPICritica" +
            "lFaultFault", Name="APICriticalFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(Sessionmanager.APIWarningFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/ChangePasswordAPIWarning" +
            "FaultFault", Name="APIWarningFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(Sessionmanager.APIValidationFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/ChangePasswordAPIValidat" +
            "ionFaultFault", Name="APIValidationFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(Sessionmanager.APISecurityFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/ChangePasswordAPISecurit" +
            "yFaultFault", Name="APISecurityFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(Sessionmanager.APIUnhandledServerFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/ChangePasswordAPIUnhandl" +
            "edServerFaultFault", Name="APIUnhandledServerFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Sessionmanager.ChangePasswordResponse> ChangePasswordAsync(Sessionmanager.ChangePasswordRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.navitaire.com/WebServices/ISessionManager/Logon", ReplyAction="http://schemas.navitaire.com/WebServices/ISessionManager/LogonResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Sessionmanager.APIFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/LogonAPIFaultFault", Name="APIFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(Sessionmanager.APIGeneralFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/LogonAPIGeneralFaultFaul" +
            "t", Name="APIGeneralFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(Sessionmanager.APICriticalFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/LogonAPICriticalFaultFau" +
            "lt", Name="APICriticalFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(Sessionmanager.APIWarningFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/LogonAPIWarningFaultFaul" +
            "t", Name="APIWarningFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(Sessionmanager.APIValidationFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/LogonAPIValidationFaultF" +
            "ault", Name="APIValidationFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(Sessionmanager.APISecurityFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/LogonAPISecurityFaultFau" +
            "lt", Name="APISecurityFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(Sessionmanager.APIUnhandledServerFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/LogonAPIUnhandledServerF" +
            "aultFault", Name="APIUnhandledServerFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Sessionmanager.LogonResponse> LogonAsync(Sessionmanager.LogonRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.navitaire.com/WebServices/ISessionManager/Logout", ReplyAction="http://schemas.navitaire.com/WebServices/ISessionManager/LogoutResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Sessionmanager.APIFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/LogoutAPIFaultFault", Name="APIFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(Sessionmanager.APIGeneralFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/LogoutAPIGeneralFaultFau" +
            "lt", Name="APIGeneralFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(Sessionmanager.APICriticalFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/LogoutAPICriticalFaultFa" +
            "ult", Name="APICriticalFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(Sessionmanager.APIWarningFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/LogoutAPIWarningFaultFau" +
            "lt", Name="APIWarningFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(Sessionmanager.APIValidationFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/LogoutAPIValidationFault" +
            "Fault", Name="APIValidationFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(Sessionmanager.APISecurityFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/LogoutAPISecurityFaultFa" +
            "ult", Name="APISecurityFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(Sessionmanager.APIUnhandledServerFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/LogoutAPIUnhandledServer" +
            "FaultFault", Name="APIUnhandledServerFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Sessionmanager.LogoutResponse> LogoutAsync(Sessionmanager.LogoutRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.navitaire.com/WebServices/ISessionManager/TransferSession", ReplyAction="http://schemas.navitaire.com/WebServices/ISessionManager/TransferSessionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Sessionmanager.APIFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/TransferSessionAPIFaultF" +
            "ault", Name="APIFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(Sessionmanager.APIGeneralFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/TransferSessionAPIGenera" +
            "lFaultFault", Name="APIGeneralFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(Sessionmanager.APICriticalFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/TransferSessionAPICritic" +
            "alFaultFault", Name="APICriticalFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(Sessionmanager.APIWarningFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/TransferSessionAPIWarnin" +
            "gFaultFault", Name="APIWarningFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(Sessionmanager.APIValidationFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/TransferSessionAPIValida" +
            "tionFaultFault", Name="APIValidationFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(Sessionmanager.APISecurityFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/TransferSessionAPISecuri" +
            "tyFaultFault", Name="APISecurityFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.FaultContractAttribute(typeof(Sessionmanager.APIUnhandledServerFault), Action="http://schemas.navitaire.com/WebServices/ISessionManager/TransferSessionAPIUnhand" +
            "ledServerFaultFault", Name="APIUnhandledServerFault", Namespace="http://schemas.navitaire.com/WebServices/FaultContracts")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Sessionmanager.TransferSessionResponse> TransferSessionAsync(Sessionmanager.TransferSessionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.navitaire.com/WebServices/ISessionManager/KeepAlive", ReplyAction="http://schemas.navitaire.com/WebServices/ISessionManager/KeepAliveResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Sessionmanager.KeepAliveResponse> KeepAliveAsync(Sessionmanager.KeepAliveRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePasswordRequest", WrapperNamespace="http://schemas.navitaire.com/WebServices/ServiceContracts/SessionService", IsWrapped=true)]
    public partial class ChangePasswordRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.navitaire.com/WebServices")]
        public int ContractVersion;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.navitaire.com/WebServices/ServiceContracts/SessionService", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Sessionmanager.LogonRequestData logonRequestData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.navitaire.com/WebServices/ServiceContracts/SessionService", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string newPassword;
        
        public ChangePasswordRequest()
        {
        }
        
        public ChangePasswordRequest(int ContractVersion, Sessionmanager.LogonRequestData logonRequestData, string newPassword)
        {
            this.ContractVersion = ContractVersion;
            this.logonRequestData = logonRequestData;
            this.newPassword = newPassword;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ChangePasswordResponse
    {
        
        public ChangePasswordResponse()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LogonRequest", WrapperNamespace="http://schemas.navitaire.com/WebServices/ServiceContracts/SessionService", IsWrapped=true)]
    public partial class LogonRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.navitaire.com/WebServices")]
        public int ContractVersion;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.navitaire.com/WebServices")]
        public bool EnableExceptionStackTrace;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.navitaire.com/WebServices/ServiceContracts/SessionService", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Sessionmanager.LogonRequestData logonRequestData;
        
        public LogonRequest()
        {
        }
        
        public LogonRequest(int ContractVersion, bool EnableExceptionStackTrace, Sessionmanager.LogonRequestData logonRequestData)
        {
            this.ContractVersion = ContractVersion;
            this.EnableExceptionStackTrace = EnableExceptionStackTrace;
            this.logonRequestData = logonRequestData;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LogonResponse", WrapperNamespace="http://schemas.navitaire.com/WebServices", IsWrapped=true)]
    public partial class LogonResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.navitaire.com/WebServices", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Signature;
        
        public LogonResponse()
        {
        }
        
        public LogonResponse(string Signature)
        {
            this.Signature = Signature;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LogoutRequest", WrapperNamespace="http://schemas.navitaire.com/WebServices/ServiceContracts/SessionService", IsWrapped=true)]
    public partial class LogoutRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.navitaire.com/WebServices")]
        public int ContractVersion;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.navitaire.com/WebServices")]
        public bool EnableExceptionStackTrace;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.navitaire.com/WebServices")]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string MessageContractVersion;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.navitaire.com/WebServices")]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Signature;
        
        public LogoutRequest()
        {
        }
        
        public LogoutRequest(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature)
        {
            this.ContractVersion = ContractVersion;
            this.EnableExceptionStackTrace = EnableExceptionStackTrace;
            this.MessageContractVersion = MessageContractVersion;
            this.Signature = Signature;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LogoutResponse
    {
        
        public LogoutResponse()
        {
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Session")]
    public partial class TokenRequest
    {
        
        private string tokenField;
        
        private string terminalInfoField;
        
        private ChannelType channelTypeField;
        
        private bool channelTypeFieldSpecified;
        
        private SystemType systemTypeField;
        
        private bool systemTypeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string Token
        {
            get
            {
                return this.tokenField;
            }
            set
            {
                this.tokenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string TerminalInfo
        {
            get
            {
                return this.terminalInfoField;
            }
            set
            {
                this.terminalInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public ChannelType ChannelType
        {
            get
            {
                return this.channelTypeField;
            }
            set
            {
                this.channelTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChannelTypeSpecified
        {
            get
            {
                return this.channelTypeFieldSpecified;
            }
            set
            {
                this.channelTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public SystemType SystemType
        {
            get
            {
                return this.systemTypeField;
            }
            set
            {
                this.systemTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SystemTypeSpecified
        {
            get
            {
                return this.systemTypeFieldSpecified;
            }
            set
            {
                this.systemTypeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Common/Enumerations")]
    public enum ChannelType
    {
        
        /// <remarks/>
        Default,
        
        /// <remarks/>
        Direct,
        
        /// <remarks/>
        Web,
        
        /// <remarks/>
        GDS,
        
        /// <remarks/>
        API,
        
        /// <remarks/>
        Unmapped,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Common/Enumerations")]
    public enum SystemType
    {
        
        /// <remarks/>
        Default,
        
        /// <remarks/>
        WinRez,
        
        /// <remarks/>
        FareManager,
        
        /// <remarks/>
        ScheduleManager,
        
        /// <remarks/>
        WinManager,
        
        /// <remarks/>
        ConsoleRez,
        
        /// <remarks/>
        WebRez,
        
        /// <remarks/>
        WebServicesAPI,
        
        /// <remarks/>
        WebServicesESC,
        
        /// <remarks/>
        InternalService,
        
        /// <remarks/>
        WebReporting,
        
        /// <remarks/>
        TaxAndFeeManager,
        
        /// <remarks/>
        DCS,
        
        /// <remarks/>
        Unmapped,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.navitaire.com/WebServices/DataContracts/Session")]
    public partial class TransferSessionResponseData
    {
        
        private string signatureField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string Signature
        {
            get
            {
                return this.signatureField;
            }
            set
            {
                this.signatureField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TransferSessionRequest", WrapperNamespace="http://schemas.navitaire.com/WebServices/ServiceContracts/SessionService", IsWrapped=true)]
    public partial class TransferSessionRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.navitaire.com/WebServices")]
        public int ContractVersion;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.navitaire.com/WebServices/ServiceContracts/SessionService", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Sessionmanager.TokenRequest tokenRequest;
        
        public TransferSessionRequest()
        {
        }
        
        public TransferSessionRequest(int ContractVersion, Sessionmanager.TokenRequest tokenRequest)
        {
            this.ContractVersion = ContractVersion;
            this.tokenRequest = tokenRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TransferSessionResponse", WrapperNamespace="http://schemas.navitaire.com/WebServices/ServiceContracts/SessionService", IsWrapped=true)]
    public partial class TransferSessionResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.navitaire.com/WebServices/ServiceContracts/SessionService", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Sessionmanager.TransferSessionResponseData TransferSessionResponseData;
        
        public TransferSessionResponse()
        {
        }
        
        public TransferSessionResponse(Sessionmanager.TransferSessionResponseData TransferSessionResponseData)
        {
            this.TransferSessionResponseData = TransferSessionResponseData;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="KeepAliveRequest", WrapperNamespace="http://schemas.navitaire.com/WebServices/ServiceContracts/SessionService", IsWrapped=true)]
    public partial class KeepAliveRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.navitaire.com/WebServices")]
        public int ContractVersion;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.navitaire.com/WebServices")]
        public bool EnableExceptionStackTrace;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.navitaire.com/WebServices")]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string MessageContractVersion;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.navitaire.com/WebServices")]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Signature;
        
        public KeepAliveRequest()
        {
        }
        
        public KeepAliveRequest(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature)
        {
            this.ContractVersion = ContractVersion;
            this.EnableExceptionStackTrace = EnableExceptionStackTrace;
            this.MessageContractVersion = MessageContractVersion;
            this.Signature = Signature;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class KeepAliveResponse
    {
        
        public KeepAliveResponse()
        {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public interface ISessionManagerChannel : Sessionmanager.ISessionManager, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public partial class SessionManagerClient : System.ServiceModel.ClientBase<Sessionmanager.ISessionManager>, Sessionmanager.ISessionManager
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public SessionManagerClient() : 
                base(SessionManagerClient.GetDefaultBinding(), SessionManagerClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_ISessionManager.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SessionManagerClient(EndpointConfiguration endpointConfiguration) : 
                base(SessionManagerClient.GetBindingForEndpoint(endpointConfiguration), SessionManagerClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SessionManagerClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(SessionManagerClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SessionManagerClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(SessionManagerClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SessionManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Sessionmanager.ChangePasswordResponse> Sessionmanager.ISessionManager.ChangePasswordAsync(Sessionmanager.ChangePasswordRequest request)
        {
            return base.Channel.ChangePasswordAsync(request);
        }
        
        public System.Threading.Tasks.Task<Sessionmanager.ChangePasswordResponse> ChangePasswordAsync(int ContractVersion, Sessionmanager.LogonRequestData logonRequestData, string newPassword)
        {
            Sessionmanager.ChangePasswordRequest inValue = new Sessionmanager.ChangePasswordRequest();
            inValue.ContractVersion = ContractVersion;
            inValue.logonRequestData = logonRequestData;
            inValue.newPassword = newPassword;
            return ((Sessionmanager.ISessionManager)(this)).ChangePasswordAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Sessionmanager.LogonResponse> Sessionmanager.ISessionManager.LogonAsync(Sessionmanager.LogonRequest request)
        {
            return base.Channel.LogonAsync(request);
        }
        
        public System.Threading.Tasks.Task<Sessionmanager.LogonResponse> LogonAsync(int ContractVersion, bool EnableExceptionStackTrace, Sessionmanager.LogonRequestData logonRequestData)
        {
            Sessionmanager.LogonRequest inValue = new Sessionmanager.LogonRequest();
            inValue.ContractVersion = ContractVersion;
            inValue.EnableExceptionStackTrace = EnableExceptionStackTrace;
            inValue.logonRequestData = logonRequestData;
            return ((Sessionmanager.ISessionManager)(this)).LogonAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Sessionmanager.LogoutResponse> Sessionmanager.ISessionManager.LogoutAsync(Sessionmanager.LogoutRequest request)
        {
            return base.Channel.LogoutAsync(request);
        }
        
        public System.Threading.Tasks.Task<Sessionmanager.LogoutResponse> LogoutAsync(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature)
        {
            Sessionmanager.LogoutRequest inValue = new Sessionmanager.LogoutRequest();
            inValue.ContractVersion = ContractVersion;
            inValue.EnableExceptionStackTrace = EnableExceptionStackTrace;
            inValue.MessageContractVersion = MessageContractVersion;
            inValue.Signature = Signature;
            return ((Sessionmanager.ISessionManager)(this)).LogoutAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Sessionmanager.TransferSessionResponse> Sessionmanager.ISessionManager.TransferSessionAsync(Sessionmanager.TransferSessionRequest request)
        {
            return base.Channel.TransferSessionAsync(request);
        }
        
        public System.Threading.Tasks.Task<Sessionmanager.TransferSessionResponse> TransferSessionAsync(int ContractVersion, Sessionmanager.TokenRequest tokenRequest)
        {
            Sessionmanager.TransferSessionRequest inValue = new Sessionmanager.TransferSessionRequest();
            inValue.ContractVersion = ContractVersion;
            inValue.tokenRequest = tokenRequest;
            return ((Sessionmanager.ISessionManager)(this)).TransferSessionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Sessionmanager.KeepAliveResponse> Sessionmanager.ISessionManager.KeepAliveAsync(Sessionmanager.KeepAliveRequest request)
        {
            return base.Channel.KeepAliveAsync(request);
        }
        
        public System.Threading.Tasks.Task<Sessionmanager.KeepAliveResponse> KeepAliveAsync(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature)
        {
            Sessionmanager.KeepAliveRequest inValue = new Sessionmanager.KeepAliveRequest();
            inValue.ContractVersion = ContractVersion;
            inValue.EnableExceptionStackTrace = EnableExceptionStackTrace;
            inValue.MessageContractVersion = MessageContractVersion;
            inValue.Signature = Signature;
            return ((Sessionmanager.ISessionManager)(this)).KeepAliveAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ISessionManager))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ISessionManager))
            {
                return new System.ServiceModel.EndpointAddress("https://sgtestr4xapi.navitaire.com/SessionManager.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return SessionManagerClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_ISessionManager);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return SessionManagerClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_ISessionManager);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_ISessionManager,
        }
    }
    
    [System.Xml.Serialization.XmlSchemaProviderAttribute(null, IsAny=true)]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil-lib", "2.1.0.0")]
    public partial class ArrayOfXElement : object, System.Xml.Serialization.IXmlSerializable
    {
        
        private System.Collections.Generic.List<System.Xml.Linq.XElement> nodesList = new System.Collections.Generic.List<System.Xml.Linq.XElement>();
        
        public ArrayOfXElement()
        {
        }
        
        public virtual System.Collections.Generic.List<System.Xml.Linq.XElement> Nodes
        {
            get
            {
                return this.nodesList;
            }
        }
        
        public virtual System.Xml.Schema.XmlSchema GetSchema()
        {
            throw new System.NotImplementedException();
        }
        
        public virtual void WriteXml(System.Xml.XmlWriter writer)
        {
            System.Collections.Generic.IEnumerator<System.Xml.Linq.XElement> e = nodesList.GetEnumerator();
            for (
            ; e.MoveNext(); 
            )
            {
                ((System.Xml.Serialization.IXmlSerializable)(e.Current)).WriteXml(writer);
            }
        }
        
        public virtual void ReadXml(System.Xml.XmlReader reader)
        {
            for (
            ; (reader.NodeType != System.Xml.XmlNodeType.EndElement); 
            )
            {
                if ((reader.NodeType == System.Xml.XmlNodeType.Element))
                {
                    System.Xml.Linq.XElement elem = new System.Xml.Linq.XElement("default");
                    ((System.Xml.Serialization.IXmlSerializable)(elem)).ReadXml(reader);
                    Nodes.Add(elem);
                }
                else
                {
                    reader.Skip();
                }
            }
        }
    }
}
